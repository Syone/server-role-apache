---
- name: Install Apache and PHP
  ansible.builtin.apt:
    pkg:
      - apache2
      - libapache2-mod-fcgid
      - php
      - php-curl
      - php-mbstring
    state: latest
    update_cache: yes

- name: Enable modules
  community.general.apache2_module:
    name: "{{ item }}"
    state: present
  loop:
    - rewrite
    - proxy
    - proxy_fcgi
    - ssl
    - http2
    - brotli
    - headers
  notify:
    - Reload Apache

- name: Copy conf
  ansible.builtin.copy:
    src: conf-available/
    dest: /etc/apache2/conf-available/

- name: Add Strict-Transport-Security header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"'
    regexp: '^(?!#)Header always set Strict-Transport-Security'
    state: present

- name: Add X-Frame-Options header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header set X-Frame-Options "sameorigin"'
    regexp: '^(?!#)Header set X-Frame-Options'
    state: present

- name: Add X-Content-Type-Options header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header set X-Content-Type-Options "nosniff"'
    regexp: '^(?!#)Header set X-Content-Type-Options'
    state: present

- name: Add X-XSS-Protection header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header set X-XSS-Protection "1; mode=block"'
    regexp: '^(?!#)Header set X-XSS-Protection'
    state: present

- name: Add Referrer-Policy header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header always set Referrer-Policy "strict-origin-when-cross-origin"'
    regexp: '^(?!#)Header always set Referrer-Policy'
    state: present

- name: Add Permissions-Policy header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header set Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"'
    regexp: '^(?!#)Header set Permissions-Policy'
    state: present

- name: Add Content-Security-Policy header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header always set Content-Security-Policy "default-src ''self''; script-src ''self''; style-src ''self'' ''unsafe-inline''; style-src-elem * ''unsafe-inline''; img-src * data:; object-src ''none''; frame-ancestors ''none''; base-uri ''self'';"'
    regexp: '^(?!#)Header always set Content-Security-Policy'
    state: present

- name: Unset Server header in security.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/conf-available/security.conf
    insertafter: EOF
    line: 'Header unset Server'
    regexp: '^(?!#)Header unset Server'
    state: present

- name: Add ServerTokens and ServerSignature directives
  lineinfile:
    path: /etc/apache2/apache2.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  loop:
    - { regexp: '^#?ServerTokens', line: 'ServerTokens Prod' }
    - { regexp: '^#?ServerSignature', line: 'ServerSignature Off' }

- name: Enable conf
  ansible.builtin.command: a2enconf {{ item }}
  loop:
    - security
    - brotli
  notify:
    - Restart Apache

- name: Register PHP version
  ansible.builtin.command: php -r "echo PHP_MAJOR_VERSION . '.' . PHP_MINOR_VERSION;"
  register: php_version

- name: Disable module PHP
  community.general.apache2_module:
    name: "php{{ php_version.stdout }}"
    state: absent
  notify:
    - Restart Apache

- name: Switch Apache MPM
  community.general.apache2_module:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    ignore_configcheck: true
    force: true
  loop:
    - { name: mpm_prefork, state: absent }
    - { name: mpm_event, state: present }
  notify:
    - Restart Apache

- name: Check if vhosts directory exist
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/files/apache/sites-available/"
  register: vhosts_dir

- name: Copy vhosts
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/apache/sites-available/"
    dest: /etc/apache2/sites-available/
  when: vhosts_dir.stat.exists

- name: Create www directories
  ansible.builtin.file:
    path: "{{ item.directory }}"
    state: directory
    owner: www-data
    group: www-data
  loop: "{{ apache_sites }}"
  when: apache_sites is defined and apache_sites | length > 0

- name: Enable sites
  ansible.builtin.command: a2ensite {{ item.domain }}.conf
  loop: "{{ apache_sites }}"
  when: apache_sites is defined and apache_sites | length > 0
  notify: Reload Apache
